/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __TRACKER_DBUS_FILES_PROXY_H__
#define __TRACKER_DBUS_FILES_PROXY_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.Tracker3.Miner.Files.Proxy */

#define TRACKER_DBUS_TYPE_MINER_FILES_PROXY (tracker_dbus_miner_files_proxy_get_type ())
#define TRACKER_DBUS_MINER_FILES_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TRACKER_DBUS_TYPE_MINER_FILES_PROXY, TrackerDBusMinerFilesProxy))
#define TRACKER_DBUS_IS_MINER_FILES_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TRACKER_DBUS_TYPE_MINER_FILES_PROXY))
#define TRACKER_DBUS_MINER_FILES_PROXY_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TRACKER_DBUS_TYPE_MINER_FILES_PROXY, TrackerDBusMinerFilesProxyIface))

struct _TrackerDBusMinerFilesProxy;
typedef struct _TrackerDBusMinerFilesProxy TrackerDBusMinerFilesProxy;
typedef struct _TrackerDBusMinerFilesProxyIface TrackerDBusMinerFilesProxyIface;

struct _TrackerDBusMinerFilesProxyIface
{
  GTypeInterface parent_iface;

  const gchar *const * (*get_graphs) (TrackerDBusMinerFilesProxy *object);

  const gchar *const * (*get_indexed_locations) (TrackerDBusMinerFilesProxy *object);

};

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (TrackerDBusMinerFilesProxy, g_object_unref)
#endif

GType tracker_dbus_miner_files_proxy_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *tracker_dbus_miner_files_proxy_interface_info (void);
guint tracker_dbus_miner_files_proxy_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus property accessors: */
const gchar *const *tracker_dbus_miner_files_proxy_get_graphs (TrackerDBusMinerFilesProxy *object);
gchar **tracker_dbus_miner_files_proxy_dup_graphs (TrackerDBusMinerFilesProxy *object);
void tracker_dbus_miner_files_proxy_set_graphs (TrackerDBusMinerFilesProxy *object, const gchar *const *value);

const gchar *const *tracker_dbus_miner_files_proxy_get_indexed_locations (TrackerDBusMinerFilesProxy *object);
gchar **tracker_dbus_miner_files_proxy_dup_indexed_locations (TrackerDBusMinerFilesProxy *object);
void tracker_dbus_miner_files_proxy_set_indexed_locations (TrackerDBusMinerFilesProxy *object, const gchar *const *value);


/* ---- */

#define TRACKER_DBUS_TYPE_MINER_FILES_PROXY_PROXY (tracker_dbus_miner_files_proxy_proxy_get_type ())
#define TRACKER_DBUS_MINER_FILES_PROXY_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TRACKER_DBUS_TYPE_MINER_FILES_PROXY_PROXY, TrackerDBusMinerFilesProxyProxy))
#define TRACKER_DBUS_MINER_FILES_PROXY_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TRACKER_DBUS_TYPE_MINER_FILES_PROXY_PROXY, TrackerDBusMinerFilesProxyProxyClass))
#define TRACKER_DBUS_MINER_FILES_PROXY_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TRACKER_DBUS_TYPE_MINER_FILES_PROXY_PROXY, TrackerDBusMinerFilesProxyProxyClass))
#define TRACKER_DBUS_IS_MINER_FILES_PROXY_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TRACKER_DBUS_TYPE_MINER_FILES_PROXY_PROXY))
#define TRACKER_DBUS_IS_MINER_FILES_PROXY_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TRACKER_DBUS_TYPE_MINER_FILES_PROXY_PROXY))

typedef struct _TrackerDBusMinerFilesProxyProxy TrackerDBusMinerFilesProxyProxy;
typedef struct _TrackerDBusMinerFilesProxyProxyClass TrackerDBusMinerFilesProxyProxyClass;
typedef struct _TrackerDBusMinerFilesProxyProxyPrivate TrackerDBusMinerFilesProxyProxyPrivate;

struct _TrackerDBusMinerFilesProxyProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  TrackerDBusMinerFilesProxyProxyPrivate *priv;
};

struct _TrackerDBusMinerFilesProxyProxyClass
{
  GDBusProxyClass parent_class;
};

GType tracker_dbus_miner_files_proxy_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (TrackerDBusMinerFilesProxyProxy, g_object_unref)
#endif

void tracker_dbus_miner_files_proxy_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
TrackerDBusMinerFilesProxy *tracker_dbus_miner_files_proxy_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
TrackerDBusMinerFilesProxy *tracker_dbus_miner_files_proxy_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void tracker_dbus_miner_files_proxy_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
TrackerDBusMinerFilesProxy *tracker_dbus_miner_files_proxy_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
TrackerDBusMinerFilesProxy *tracker_dbus_miner_files_proxy_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TRACKER_DBUS_TYPE_MINER_FILES_PROXY_SKELETON (tracker_dbus_miner_files_proxy_skeleton_get_type ())
#define TRACKER_DBUS_MINER_FILES_PROXY_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TRACKER_DBUS_TYPE_MINER_FILES_PROXY_SKELETON, TrackerDBusMinerFilesProxySkeleton))
#define TRACKER_DBUS_MINER_FILES_PROXY_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TRACKER_DBUS_TYPE_MINER_FILES_PROXY_SKELETON, TrackerDBusMinerFilesProxySkeletonClass))
#define TRACKER_DBUS_MINER_FILES_PROXY_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TRACKER_DBUS_TYPE_MINER_FILES_PROXY_SKELETON, TrackerDBusMinerFilesProxySkeletonClass))
#define TRACKER_DBUS_IS_MINER_FILES_PROXY_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TRACKER_DBUS_TYPE_MINER_FILES_PROXY_SKELETON))
#define TRACKER_DBUS_IS_MINER_FILES_PROXY_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TRACKER_DBUS_TYPE_MINER_FILES_PROXY_SKELETON))

typedef struct _TrackerDBusMinerFilesProxySkeleton TrackerDBusMinerFilesProxySkeleton;
typedef struct _TrackerDBusMinerFilesProxySkeletonClass TrackerDBusMinerFilesProxySkeletonClass;
typedef struct _TrackerDBusMinerFilesProxySkeletonPrivate TrackerDBusMinerFilesProxySkeletonPrivate;

struct _TrackerDBusMinerFilesProxySkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  TrackerDBusMinerFilesProxySkeletonPrivate *priv;
};

struct _TrackerDBusMinerFilesProxySkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType tracker_dbus_miner_files_proxy_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (TrackerDBusMinerFilesProxySkeleton, g_object_unref)
#endif

TrackerDBusMinerFilesProxy *tracker_dbus_miner_files_proxy_skeleton_new (void);


G_END_DECLS

#endif /* __TRACKER_DBUS_FILES_PROXY_H__ */
