/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __TRACKER_DBUS_FILES_INDEX_H__
#define __TRACKER_DBUS_FILES_INDEX_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.Tracker3.Miner.Files.Index */

#define TRACKER_DBUS_TYPE_MINER_FILES_INDEX (tracker_dbus_miner_files_index_get_type ())
#define TRACKER_DBUS_MINER_FILES_INDEX(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TRACKER_DBUS_TYPE_MINER_FILES_INDEX, TrackerDBusMinerFilesIndex))
#define TRACKER_DBUS_IS_MINER_FILES_INDEX(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TRACKER_DBUS_TYPE_MINER_FILES_INDEX))
#define TRACKER_DBUS_MINER_FILES_INDEX_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TRACKER_DBUS_TYPE_MINER_FILES_INDEX, TrackerDBusMinerFilesIndexIface))

struct _TrackerDBusMinerFilesIndex;
typedef struct _TrackerDBusMinerFilesIndex TrackerDBusMinerFilesIndex;
typedef struct _TrackerDBusMinerFilesIndexIface TrackerDBusMinerFilesIndexIface;

struct _TrackerDBusMinerFilesIndexIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_index_location) (
    TrackerDBusMinerFilesIndex *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_file_uri,
    const gchar *const *arg_graphs,
    const gchar *const *arg_flags);

};

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (TrackerDBusMinerFilesIndex, g_object_unref)
#endif

GType tracker_dbus_miner_files_index_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *tracker_dbus_miner_files_index_interface_info (void);
guint tracker_dbus_miner_files_index_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void tracker_dbus_miner_files_index_complete_index_location (
    TrackerDBusMinerFilesIndex *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void tracker_dbus_miner_files_index_call_index_location (
    TrackerDBusMinerFilesIndex *proxy,
    const gchar *arg_file_uri,
    const gchar *const *arg_graphs,
    const gchar *const *arg_flags,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean tracker_dbus_miner_files_index_call_index_location_finish (
    TrackerDBusMinerFilesIndex *proxy,
    GAsyncResult *res,
    GError **error);

gboolean tracker_dbus_miner_files_index_call_index_location_sync (
    TrackerDBusMinerFilesIndex *proxy,
    const gchar *arg_file_uri,
    const gchar *const *arg_graphs,
    const gchar *const *arg_flags,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TRACKER_DBUS_TYPE_MINER_FILES_INDEX_PROXY (tracker_dbus_miner_files_index_proxy_get_type ())
#define TRACKER_DBUS_MINER_FILES_INDEX_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TRACKER_DBUS_TYPE_MINER_FILES_INDEX_PROXY, TrackerDBusMinerFilesIndexProxy))
#define TRACKER_DBUS_MINER_FILES_INDEX_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TRACKER_DBUS_TYPE_MINER_FILES_INDEX_PROXY, TrackerDBusMinerFilesIndexProxyClass))
#define TRACKER_DBUS_MINER_FILES_INDEX_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TRACKER_DBUS_TYPE_MINER_FILES_INDEX_PROXY, TrackerDBusMinerFilesIndexProxyClass))
#define TRACKER_DBUS_IS_MINER_FILES_INDEX_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TRACKER_DBUS_TYPE_MINER_FILES_INDEX_PROXY))
#define TRACKER_DBUS_IS_MINER_FILES_INDEX_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TRACKER_DBUS_TYPE_MINER_FILES_INDEX_PROXY))

typedef struct _TrackerDBusMinerFilesIndexProxy TrackerDBusMinerFilesIndexProxy;
typedef struct _TrackerDBusMinerFilesIndexProxyClass TrackerDBusMinerFilesIndexProxyClass;
typedef struct _TrackerDBusMinerFilesIndexProxyPrivate TrackerDBusMinerFilesIndexProxyPrivate;

struct _TrackerDBusMinerFilesIndexProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  TrackerDBusMinerFilesIndexProxyPrivate *priv;
};

struct _TrackerDBusMinerFilesIndexProxyClass
{
  GDBusProxyClass parent_class;
};

GType tracker_dbus_miner_files_index_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (TrackerDBusMinerFilesIndexProxy, g_object_unref)
#endif

void tracker_dbus_miner_files_index_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
TrackerDBusMinerFilesIndex *tracker_dbus_miner_files_index_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
TrackerDBusMinerFilesIndex *tracker_dbus_miner_files_index_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void tracker_dbus_miner_files_index_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
TrackerDBusMinerFilesIndex *tracker_dbus_miner_files_index_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
TrackerDBusMinerFilesIndex *tracker_dbus_miner_files_index_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TRACKER_DBUS_TYPE_MINER_FILES_INDEX_SKELETON (tracker_dbus_miner_files_index_skeleton_get_type ())
#define TRACKER_DBUS_MINER_FILES_INDEX_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TRACKER_DBUS_TYPE_MINER_FILES_INDEX_SKELETON, TrackerDBusMinerFilesIndexSkeleton))
#define TRACKER_DBUS_MINER_FILES_INDEX_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TRACKER_DBUS_TYPE_MINER_FILES_INDEX_SKELETON, TrackerDBusMinerFilesIndexSkeletonClass))
#define TRACKER_DBUS_MINER_FILES_INDEX_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TRACKER_DBUS_TYPE_MINER_FILES_INDEX_SKELETON, TrackerDBusMinerFilesIndexSkeletonClass))
#define TRACKER_DBUS_IS_MINER_FILES_INDEX_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TRACKER_DBUS_TYPE_MINER_FILES_INDEX_SKELETON))
#define TRACKER_DBUS_IS_MINER_FILES_INDEX_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TRACKER_DBUS_TYPE_MINER_FILES_INDEX_SKELETON))

typedef struct _TrackerDBusMinerFilesIndexSkeleton TrackerDBusMinerFilesIndexSkeleton;
typedef struct _TrackerDBusMinerFilesIndexSkeletonClass TrackerDBusMinerFilesIndexSkeletonClass;
typedef struct _TrackerDBusMinerFilesIndexSkeletonPrivate TrackerDBusMinerFilesIndexSkeletonPrivate;

struct _TrackerDBusMinerFilesIndexSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  TrackerDBusMinerFilesIndexSkeletonPrivate *priv;
};

struct _TrackerDBusMinerFilesIndexSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType tracker_dbus_miner_files_index_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (TrackerDBusMinerFilesIndexSkeleton, g_object_unref)
#endif

TrackerDBusMinerFilesIndex *tracker_dbus_miner_files_index_skeleton_new (void);


G_END_DECLS

#endif /* __TRACKER_DBUS_FILES_INDEX_H__ */
